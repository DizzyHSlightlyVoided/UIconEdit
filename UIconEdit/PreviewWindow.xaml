<Window x:Class="UIconEdit.Maker.PreviewWindow" x:ClassModifier="internal" x:Name="window"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" SnapsToDevicePixels="True" UseLayoutRounding="True"
        xmlns:local="clr-namespace:UIconEdit.Maker" Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
        mc:Ignorable="d" WindowStartupLocation="CenterOwner" Loaded="window_Loaded" Icon="GradientEdit.ico" ShowInTaskbar="False"
        Title="{Binding Owner.Owner.SettingsFile.LanguageFile.Preview, ElementName=window, FallbackValue=Preview}" Closing="window_Closing"
        MinHeight="660" MinWidth="700" Height="660" Width="700">
    <Window.Resources>
        <local:ScaleFilterConverter x:Key="ScaleFilterConverter" />
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <local:BooleanToInvisibilityConverter x:Key="BooleanToInvisibilityConverter" />
        <local:NotConverter x:Key="NotConverter" />
        <local:IndexToAlphaModeConverter x:Key="IndexToAlphaModeConverter"/>
    </Window.Resources>
    <DockPanel>
        <ToolBar DockPanel.Dock="Top" Height="Auto" ToolBarTray.IsLocked="true">
            <TextBlock Text="{Binding Owner.Owner.SettingsFile.LanguageFile.AlphaThreshold, ElementName=window,FallbackValue='Alpha Threshold:'}"
                       VerticalAlignment="Center" Visibility="{Binding SettingAlpha, ElementName=window, Converter={StaticResource BooleanToInvisibilityConverter}}"/>
            <Border Visibility="{Binding SettingAlpha, ElementName=window, Converter={StaticResource BooleanToInvisibilityConverter}}"
                    VerticalAlignment="Center" Margin="5,0,0,0">
                <TextBox Width="65" Text="{Binding AlphaThreshold, ElementName=window}" VerticalAlignment="Center" x:Name="txtAlpha"
                         IsEnabled="{Binding Owner.UseAlphaThreshold, ElementName=window}" PreviewKeyUp="txtAlpha_PreviewKeyUp"/>
            </Border>
            <TextBlock Text="{Binding Owner.Owner.SettingsFile.LanguageFile.PreviewAlphaMode, ElementName=window, FallbackValue='Alpha mode:'}"
                       VerticalAlignment="Center" Visibility="{Binding SettingAlpha, ElementName=window, Converter={StaticResource BooleanToVisibilityConverter}}"/>
            <Border Visibility="{Binding SettingAlpha, ElementName=window, Converter={StaticResource BooleanToVisibilityConverter}}" Margin="5,0,0,0">
                <ComboBox MinWidth="120" SelectedIndex="{Binding SourceEntry.AlphaConvertMode, ElementName=window, Converter={StaticResource IndexToAlphaModeConverter}}"
                          SelectionChanged="cmbWhich_SelectionChanged">
                    <TextBlock Text="{Binding Owner.Owner.SettingsFile.LanguageFile.AmodeBoth, ElementName=window, FallbackValue='Both RGB and Alpha'}"/>
                    <TextBlock Text="{Binding Owner.Owner.SettingsFile.LanguageFile.AmodeRGB ,ElementName=window, FallbackValue='RGB only'}"/>
                    <TextBlock Text="{Binding Owner.Owner.SettingsFile.LanguageFile.AmodeAlpha, ElementName=window, FallbackValue='Alpha only'}"/>
                </ComboBox>
            </Border>
            <Separator Visibility="{Binding SettingAlpha, ElementName=window, Converter={StaticResource BooleanToInvisibilityConverter}}"/>
            <TextBlock Text="{Binding Owner.Owner.SettingsFile.LanguageFile.ScalingFilter, ElementName=window, FallbackValue='Scaling filter:'}"
                       VerticalAlignment="Center" IsEnabled="{Binding Owner.DifferentSize, ElementName=window}"
                       Visibility="{Binding SettingAlpha, ElementName=window, Converter={StaticResource BooleanToInvisibilityConverter}}"/>
            <Border Visibility="{Binding SettingAlpha, ElementName=window, Converter={StaticResource BooleanToInvisibilityConverter}}"
                    Margin="5,0,0,0" VerticalAlignment="Center">
                <ComboBox x:Name="cmbFilter" MinWidth="120" ItemsSource="{x:Static local:AddWindow.Filters}" IsEnabled="{Binding Owner.DifferentSize, ElementName=window}"
                          SelectedIndex="{Binding Owner.MatrixSelectedIndex, ElementName=window}" SelectionChanged="cmbFilter_SelectionChanged">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock>
                                <TextBlock.Text>
                                    <MultiBinding Converter="{StaticResource ScaleFilterConverter}">
                                        <Binding />
                                        <Binding Path="Owner.Owner.SettingsFile.LanguageFile" ElementName="window"/>
                                    </MultiBinding>
                                </TextBlock.Text>
                            </TextBlock>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
            </Border>
            <Separator/>
            <Image Source="Resources\Zoom_24x24.png" Height="20" RenderOptions.BitmapScalingMode="HighQuality" VerticalAlignment="Center"/>
            <Border VerticalAlignment="Center">
                <ComboBox x:Name="cmbZoom" Width="75" IsEditable="True" Text="{Binding Zoom, ElementName=window, Mode=TwoWay}"
                          ItemsSource="{x:Static local:MainWindow.Zooms}"/>
            </Border>
            <TextBlock VerticalAlignment="Center" Text="{Binding Owner.Owner.SettingsFile.LanguageFile.Percent, ElementName=window, FallbackValue=%}"/>
            <Separator/>
            <Border VerticalAlignment="Center">
                <ComboBox x:Name="cmbWhich" Width="150" IsEnabled="{Binding HasMultiImage, ElementName=window}" SelectionChanged="cmbWhich_SelectionChanged"
                          SelectedIndex="{Binding SourceIndex, ElementName=window}">
                    <TextBlock Text="{Binding Owner.Owner.SettingsFile.LanguageFile.PreviewCombined, FallbackValue='Image + Alpha'}" />
                    <TextBlock Text="{Binding Owner.Owner.SettingsFile.LanguageFile.PreviewBase, FallbackValue='Base Image'}" />
                    <TextBlock Text="{Binding Owner.Owner.SettingsFile.LanguageFile.PreviewAlpha, FallbackValue='Alpha Mask'}" />
                    <TextBlock Text="{Binding Owner.Owner.SettingsFile.LanguageFile.PreviewAlphaOrig, FallbackValue='Original Alpha Mask'}" 
                               Visibility="{Binding SettingAlpha, ElementName=window, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                </ComboBox>
            </Border>
        </ToolBar>
        <StackPanel Orientation="Horizontal" FlowDirection="RightToLeft" DockPanel.Dock="Bottom">
            <Button Content="{Binding Owner.Owner.SettingsFile.LanguageFile.ButtonCancel, FallbackValue=_Cancel}" MinWidth="75" IsCancel="True" Margin="5"
                    Visibility="{Binding SettingAlpha, ElementName=window, Converter={StaticResource BooleanToVisibilityConverter}}"/>
            <Button Content="{Binding Owner.Owner.SettingsFile.LanguageFile.ButtonOK, FallbackValue=_OK}" MinWidth="75" IsDefault="True" Margin="5"
                    IsCancel="{Binding SettingAlpha, ElementName=window, Converter={StaticResource NotConverter}}" Click="Button_Click"/>
        </StackPanel>
        <Border BorderThickness="1" BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}">
            <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" x:Name="scrollImage">
                <Border BorderThickness="1" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" x:Name="frameImage"
                        HorizontalAlignment="Center" VerticalAlignment="Center" Margin="8" Background="{StaticResource TransparentTiles}" Padding="2">
                    <Image Source="{Binding SourceImage, ElementName=window}"
                           RenderOptions.BitmapScalingMode="{Binding ZoomScaleMode, ElementName=window}" x:Name="imgIcon"
                           Width="{Binding ZoomedWidth, ElementName=window}" Height="{Binding ZoomedHeight, ElementName=window}"/>
                </Border>
            </ScrollViewer>
        </Border>
    </DockPanel>
</Window>
